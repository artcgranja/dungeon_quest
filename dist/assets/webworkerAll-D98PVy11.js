import{E as T,U as At,T as Re,c as Ne,a2 as k,a3 as U,D as Y,N as Wt,ac as X,ad as Me,ae as Ue,_ as E,af as le,ag as ve,w as j,u as R,M,Z as ie,O as ue,ah as Ot,ai as G,a as qe,b as Qe,o as K,i as Je,H as A,a5 as Te,R as we,F as Ze,h as re,B as W,n as ze,y as ce,aj as Dt,ak as Se,K as ye,al as ne,S as Ce,p as et,t as tt,a7 as rt,aa as it,q as It,s as Lt,a8 as Et,a9 as Ht,ab as Vt,am as Yt,an as Xt,e as F,ao as $t}from"./index-M73zuSnD.js";import{F as jt,S as he,c as pe,a as Kt,b as Nt,B as st}from"./colorToUniform-Tc_aNCVM.js";import{C as N}from"./CanvasPool-D3j1jXNM.js";class nt{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:s}=this._resizeTo;t=i,r=s}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}nt.extension=T.Application;class at{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,At.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?Re.shared:new Re,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}at.extension=T.Application;class qt extends Ne{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return k(U,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return k(U,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return k(U,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return k(U,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return k(U,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){var t;this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars)(t=this.chars[r].texture)==null||t.destroy();this.chars=null,e&&(this.pages.forEach(r=>r.texture.destroy(!0)),this.pages=null)}}/**
 * tiny-lru
 *
 * @copyright 2025 Jason Mulligan <jason.mulligan@avoidwork.com>
 * @license BSD-3-Clause
 * @version 11.4.5
 */class Qt{constructor(e=0,t=0,r=!1){this.first=null,this.items=Object.create(null),this.last=null,this.max=e,this.resetTtl=r,this.size=0,this.ttl=t}clear(){return this.first=null,this.items=Object.create(null),this.last=null,this.size=0,this}delete(e){if(this.has(e)){const t=this.items[e];delete this.items[e],this.size--,t.prev!==null&&(t.prev.next=t.next),t.next!==null&&(t.next.prev=t.prev),this.first===t&&(this.first=t.next),this.last===t&&(this.last=t.prev)}return this}entries(e=this.keys()){return e.map(t=>[t,this.get(t)])}evict(e=!1){if(e||this.size>0){const t=this.first;delete this.items[t.key],--this.size===0?(this.first=null,this.last=null):(this.first=t.next,this.first.prev=null)}return this}expiresAt(e){let t;return this.has(e)&&(t=this.items[e].expiry),t}get(e){const t=this.items[e];if(t!==void 0){if(this.ttl>0&&t.expiry<=Date.now()){this.delete(e);return}return this.moveToEnd(t),t.value}}has(e){return e in this.items}moveToEnd(e){this.last!==e&&(e.prev!==null&&(e.prev.next=e.next),e.next!==null&&(e.next.prev=e.prev),this.first===e&&(this.first=e.next),e.prev=this.last,e.next=null,this.last!==null&&(this.last.next=e),this.last=e,this.first===null&&(this.first=e))}keys(){const e=[];let t=this.first;for(;t!==null;)e.push(t.key),t=t.next;return e}setWithEvicted(e,t,r=this.resetTtl){let i=null;if(this.has(e))this.set(e,t,!0,r);else{this.max>0&&this.size===this.max&&(i={...this.first},this.evict(!0));let s=this.items[e]={expiry:this.ttl>0?Date.now()+this.ttl:this.ttl,key:e,prev:this.last,next:null,value:t};++this.size===1?this.first=s:this.last.next=s,this.last=s}return i}set(e,t,r=!1,i=this.resetTtl){let s=this.items[e];return r||s!==void 0?(s.value=t,r===!1&&i&&(s.expiry=this.ttl>0?Date.now()+this.ttl:this.ttl),this.moveToEnd(s)):(this.max>0&&this.size===this.max&&this.evict(!0),s=this.items[e]={expiry:this.ttl>0?Date.now()+this.ttl:this.ttl,key:e,prev:this.last,next:null,value:t},++this.size===1?this.first=s:this.last.next=s,this.last=s),this}values(e=this.keys()){return e.map(t=>this.get(t))}}function ot(o=1e3,e=0,t=!1){if(isNaN(o)||o<0)throw new TypeError("Invalid max value");if(isNaN(e)||e<0)throw new TypeError("Invalid ttl value");if(typeof t!="boolean")throw new TypeError("Invalid resetTtl value");return new Qt(o,e,t)}const Jt=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function de(o){const e=typeof o.fontSize=="number"?`${o.fontSize}px`:o.fontSize;let t=o.fontFamily;Array.isArray(o.fontFamily)||(t=o.fontFamily.split(","));for(let r=t.length-1;r>=0;r--){let i=t[r].trim();!/([\"\'])[^\'\"]+\1/.test(i)&&!Jt.includes(i)&&(i=`"${i}"`),t[r]=i}return`${o.fontStyle} ${o.fontVariant} ${o.fontWeight} ${e} ${t.join(",")}`}const me={willReadFrequently:!0},z=class m{static get experimentalLetterSpacingSupported(){let e=m._experimentalLetterSpacingSupported;if(e===void 0){const t=Y.get().getCanvasRenderingContext2D().prototype;e=m._experimentalLetterSpacingSupported="letterSpacing"in t||"textLetterSpacing"in t}return e}constructor(e,t,r,i,s,n,a,l,u){this.text=e,this.style=t,this.width=r,this.height=i,this.lines=s,this.lineWidths=n,this.lineHeight=a,this.maxLineWidth=l,this.fontProperties=u}static measureText(e=" ",t,r=m._canvas,i=t.wordWrap){var v;const s=`${e}-${t.styleKey}-wordWrap-${i}`;if(m._measurementCache.has(s))return m._measurementCache.get(s);const n=de(t),a=m.measureFont(n);a.fontSize===0&&(a.fontSize=t.fontSize,a.ascent=t.fontSize);const l=m.__context;l.font=n;const c=(i?m._wordWrap(e,t,r):e).split(/(?:\r\n|\r|\n)/),d=new Array(c.length);let h=0;for(let y=0;y<c.length;y++){const b=m._measureText(c[y],t.letterSpacing,l);d[y]=b,h=Math.max(h,b)}const f=((v=t._stroke)==null?void 0:v.width)||0;let x=h+f;t.dropShadow&&(x+=t.dropShadow.distance);const g=t.lineHeight||a.fontSize;let _=Math.max(g,a.fontSize+f)+(c.length-1)*(g+t.leading);t.dropShadow&&(_+=t.dropShadow.distance);const p=new m(e,t,x,_,c,d,g+t.leading,h,a);return m._measurementCache.set(s,p),p}static _measureText(e,t,r){let i=!1;m.experimentalLetterSpacingSupported&&(m.experimentalLetterSpacing?(r.letterSpacing=`${t}px`,r.textLetterSpacing=`${t}px`,i=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));const s=r.measureText(e);let n=s.width;const a=-s.actualBoundingBoxLeft;let u=s.actualBoundingBoxRight-a;if(n>0)if(i)n-=t,u-=t;else{const c=(m.graphemeSegmenter(e).length-1)*t;n+=c,u+=c}return Math.max(n,u)}static _wordWrap(e,t,r=m._canvas){const i=r.getContext("2d",me);let s=0,n="",a="";const l=Object.create(null),{letterSpacing:u,whiteSpace:c}=t,d=m._collapseSpaces(c),h=m._collapseNewlines(c);let f=!d;const x=t.wordWrapWidth+u,g=m._tokenize(e);for(let _=0;_<g.length;_++){let p=g[_];if(m._isNewline(p)){if(!h){a+=m._addLine(n),f=!d,n="",s=0;continue}p=" "}if(d){const y=m.isBreakingSpace(p),b=m.isBreakingSpace(n[n.length-1]);if(y&&b)continue}const v=m._getFromCache(p,u,l,i);if(v>x)if(n!==""&&(a+=m._addLine(n),n="",s=0),m.canBreakWords(p,t.breakWords)){const y=m.wordWrapSplit(p);for(let b=0;b<y.length;b++){let w=y[b],P=w,B=1;for(;y[b+B];){const D=y[b+B];if(!m.canBreakChars(P,D,p,b,t.breakWords))w+=D;else break;P=D,B++}b+=B-1;const S=m._getFromCache(w,u,l,i);S+s>x&&(a+=m._addLine(n),f=!1,n="",s=0),n+=w,s+=S}}else{n.length>0&&(a+=m._addLine(n),n="",s=0);const y=_===g.length-1;a+=m._addLine(p,!y),f=!1,n="",s=0}else v+s>x&&(f=!1,a+=m._addLine(n),n="",s=0),(n.length>0||!m.isBreakingSpace(p)||f)&&(n+=p,s+=v)}return a+=m._addLine(n,!1),a}static _addLine(e,t=!0){return e=m._trimRight(e),e=t?`${e}
`:e,e}static _getFromCache(e,t,r,i){let s=r[e];return typeof s!="number"&&(s=m._measureText(e,t,i)+t,r[e]=s),s}static _collapseSpaces(e){return e==="normal"||e==="pre-line"}static _collapseNewlines(e){return e==="normal"}static _trimRight(e){if(typeof e!="string")return"";for(let t=e.length-1;t>=0;t--){const r=e[t];if(!m.isBreakingSpace(r))break;e=e.slice(0,-1)}return e}static _isNewline(e){return typeof e!="string"?!1:m._newlines.includes(e.charCodeAt(0))}static isBreakingSpace(e,t){return typeof e!="string"?!1:m._breakingSpaces.includes(e.charCodeAt(0))}static _tokenize(e){const t=[];let r="";if(typeof e!="string")return t;for(let i=0;i<e.length;i++){const s=e[i],n=e[i+1];if(m.isBreakingSpace(s,n)||m._isNewline(s)){r!==""&&(t.push(r),r=""),s==="\r"&&n===`
`?(t.push(`\r
`),i++):t.push(s);continue}r+=s}return r!==""&&t.push(r),t}static canBreakWords(e,t){return t}static canBreakChars(e,t,r,i,s){return!0}static wordWrapSplit(e){return m.graphemeSegmenter(e)}static measureFont(e){if(m._fonts[e])return m._fonts[e];const t=m._context;t.font=e;const r=t.measureText(m.METRICS_STRING+m.BASELINE_SYMBOL),i={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return m._fonts[e]=i,i}static clearMetrics(e=""){e?delete m._fonts[e]:m._fonts={}}static get _canvas(){if(!m.__canvas){let e;try{const t=new OffscreenCanvas(0,0),r=t.getContext("2d",me);if(r!=null&&r.measureText)return m.__canvas=t,t;e=Y.get().createCanvas()}catch{e=Y.get().createCanvas()}e.width=e.height=10,m.__canvas=e}return m.__canvas}static get _context(){return m.__context||(m.__context=m._canvas.getContext("2d",me)),m.__context}};z.METRICS_STRING="|ÉqÅ";z.BASELINE_SYMBOL="M";z.BASELINE_MULTIPLIER=1.4;z.HEIGHT_MULTIPLIER=2;z.graphemeSegmenter=(()=>{if(typeof(Intl==null?void 0:Intl.Segmenter)=="function"){const o=new Intl.Segmenter;return e=>{const t=o.segment(e),r=[];let i=0;for(const s of t)r[i++]=s.segment;return r}}return o=>[...o]})();z.experimentalLetterSpacing=!1;z._fonts={};z._newlines=[10,13];z._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];z._measurementCache=ot(1e3);let O=z;const Pe=class $ extends Ne{constructor(e={}){super(),this.uid=Wt("textStyle"),this._tick=0,Zt(e);const t={...$.defaultTextStyle,...e};for(const r in t){const i=r;this[i]=t[r]}this.update(),this._tick=0}get align(){return this._align}set align(e){this._align!==e&&(this._align=e,this.update())}get breakWords(){return this._breakWords}set breakWords(e){this._breakWords!==e&&(this._breakWords=e,this.update())}get dropShadow(){return this._dropShadow}set dropShadow(e){this._dropShadow!==e&&(e!==null&&typeof e=="object"?this._dropShadow=this._createProxy({...$.defaultDropShadow,...e}):this._dropShadow=e?this._createProxy({...$.defaultDropShadow}):null,this.update())}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily!==e&&(this._fontFamily=e,this.update())}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize!==e&&(typeof e=="string"?this._fontSize=parseInt(e,10):this._fontSize=e,this.update())}get fontStyle(){return this._fontStyle}set fontStyle(e){this._fontStyle!==e&&(this._fontStyle=e.toLowerCase(),this.update())}get fontVariant(){return this._fontVariant}set fontVariant(e){this._fontVariant!==e&&(this._fontVariant=e,this.update())}get fontWeight(){return this._fontWeight}set fontWeight(e){this._fontWeight!==e&&(this._fontWeight=e,this.update())}get leading(){return this._leading}set leading(e){this._leading!==e&&(this._leading=e,this.update())}get letterSpacing(){return this._letterSpacing}set letterSpacing(e){this._letterSpacing!==e&&(this._letterSpacing=e,this.update())}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight!==e&&(this._lineHeight=e,this.update())}get padding(){return this._padding}set padding(e){this._padding!==e&&(this._padding=e,this.update())}get filters(){return this._filters}set filters(e){this._filters!==e&&(this._filters=Object.freeze(e),this.update())}get trim(){return this._trim}set trim(e){this._trim!==e&&(this._trim=e,this.update())}get textBaseline(){return this._textBaseline}set textBaseline(e){this._textBaseline!==e&&(this._textBaseline=e,this.update())}get whiteSpace(){return this._whiteSpace}set whiteSpace(e){this._whiteSpace!==e&&(this._whiteSpace=e,this.update())}get wordWrap(){return this._wordWrap}set wordWrap(e){this._wordWrap!==e&&(this._wordWrap=e,this.update())}get wordWrapWidth(){return this._wordWrapWidth}set wordWrapWidth(e){this._wordWrapWidth!==e&&(this._wordWrapWidth=e,this.update())}get fill(){return this._originalFill}set fill(e){e!==this._originalFill&&(this._originalFill=e,this._isFillStyle(e)&&(this._originalFill=this._createProxy({...X.defaultFillStyle,...e},()=>{this._fill=Me({...this._originalFill},X.defaultFillStyle)})),this._fill=Me(e===0?"black":e,X.defaultFillStyle),this.update())}get stroke(){return this._originalStroke}set stroke(e){e!==this._originalStroke&&(this._originalStroke=e,this._isFillStyle(e)&&(this._originalStroke=this._createProxy({...X.defaultStrokeStyle,...e},()=>{this._stroke=Ue({...this._originalStroke},X.defaultStrokeStyle)})),this._stroke=Ue(e,X.defaultStrokeStyle),this.update())}update(){this._tick++,this.emit("update",this)}reset(){const e=$.defaultTextStyle;for(const t in e)this[t]=e[t]}get styleKey(){return`${this.uid}-${this._tick}`}clone(){return new $({align:this.align,breakWords:this.breakWords,dropShadow:this._dropShadow?{...this._dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,leading:this.leading,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,textBaseline:this.textBaseline,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,filters:this._filters?[...this._filters]:void 0})}_getFinalPadding(){let e=0;if(this._filters)for(let t=0;t<this._filters.length;t++)e+=this._filters[t].padding;return Math.max(this._padding,e)}destroy(e=!1){var r,i,s,n;if(this.removeAllListeners(),typeof e=="boolean"?e:e==null?void 0:e.texture){const a=typeof e=="boolean"?e:e==null?void 0:e.textureSource;(r=this._fill)!=null&&r.texture&&this._fill.texture.destroy(a),(i=this._originalFill)!=null&&i.texture&&this._originalFill.texture.destroy(a),(s=this._stroke)!=null&&s.texture&&this._stroke.texture.destroy(a),(n=this._originalStroke)!=null&&n.texture&&this._originalStroke.texture.destroy(a)}this._fill=null,this._stroke=null,this.dropShadow=null,this._originalStroke=null,this._originalFill=null}_createProxy(e,t){return new Proxy(e,{set:(r,i,s)=>(r[i]===s||(r[i]=s,t==null||t(i,s),this.update()),!0)})}_isFillStyle(e){return(e!=null?e:null)!==null&&!(E.isColorLike(e)||e instanceof le||e instanceof ve)}};Pe.defaultDropShadow={alpha:1,angle:Math.PI/6,blur:0,color:"black",distance:5};Pe.defaultTextStyle={align:"left",breakWords:!1,dropShadow:null,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",leading:0,letterSpacing:0,lineHeight:0,padding:0,stroke:null,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100};let q=Pe;function Zt(o){var t,r,i,s,n;const e=o;if(typeof e.dropShadow=="boolean"&&e.dropShadow){const a=q.defaultDropShadow;o.dropShadow={alpha:(t=e.dropShadowAlpha)!=null?t:a.alpha,angle:(r=e.dropShadowAngle)!=null?r:a.angle,blur:(i=e.dropShadowBlur)!=null?i:a.blur,color:(s=e.dropShadowColor)!=null?s:a.color,distance:(n=e.dropShadowDistance)!=null?n:a.distance}}if(e.strokeThickness!==void 0){k(U,"strokeThickness is now a part of stroke");const a=e.stroke;let l={};if(E.isColorLike(a))l.color=a;else if(a instanceof le||a instanceof ve)l.fill=a;else if(Object.hasOwnProperty.call(a,"color")||Object.hasOwnProperty.call(a,"fill"))l=a;else throw new Error("Invalid stroke value.");o.stroke={...l,width:e.strokeThickness}}if(Array.isArray(e.fillGradientStops)){if(k(U,"gradient fill is now a fill pattern: `new FillGradient(...)`"),!Array.isArray(e.fill)||e.fill.length===0)throw new Error("Invalid fill value. Expected an array of colors for gradient fill.");e.fill.length!==e.fillGradientStops.length&&j("The number of fill colors must match the number of fill gradient stops.");const a=new le({start:{x:0,y:0},end:{x:0,y:1},textureSpace:"local"}),l=e.fillGradientStops.slice(),u=e.fill.map(c=>E.shared.setValue(c).toNumber());l.forEach((c,d)=>{a.addColorStop(c,u[d])}),o.fill={fill:a}}}const Ge=1e5;function fe(o,e,t,r=0){var i;if(o.texture===R.WHITE&&!o.fill)return E.shared.setValue(o.color).setAlpha((i=o.alpha)!=null?i:1).toHexa();if(o.fill){if(o.fill instanceof ve){const s=o.fill,n=e.createPattern(s.texture.source.resource,"repeat"),a=s.transform.copyTo(M.shared);return a.scale(s.texture.frame.width,s.texture.frame.height),n.setTransform(a),n}else if(o.fill instanceof le){const s=o.fill,n=s.type==="linear",a=s.textureSpace==="local";let l=1,u=1;a&&t&&(l=t.width+r,u=t.height+r);let c,d=!1;if(n){const{start:h,end:f}=s;c=e.createLinearGradient(h.x*l,h.y*u,f.x*l,f.y*u),d=Math.abs(f.x-h.x)<Math.abs((f.y-h.y)*.1)}else{const{center:h,innerRadius:f,outerCenter:x,outerRadius:g}=s;c=e.createRadialGradient(h.x*l,h.y*u,f*l,x.x*l,x.y*u,g*l)}if(d&&a&&t){const h=t.lineHeight/u;for(let f=0;f<t.lines.length;f++){const x=(f*t.lineHeight+r/2)/u;s.colorStops.forEach(g=>{const _=x+g.offset*h;c.addColorStop(Math.floor(_*Ge)/Ge,E.shared.setValue(g.color).toHex())})}}else s.colorStops.forEach(h=>{c.addColorStop(h.offset,E.shared.setValue(h.color).toHex())});return c}}else{const s=e.createPattern(o.texture.source.resource,"repeat"),n=o.matrix.copyTo(M.shared);return n.scale(o.texture.frame.width,o.texture.frame.height),s.setTransform(n),s}return j("FillStyle not recognised",o),"red"}const lt=class ut extends qt{constructor(e){var n,a,l;super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentMaxCharHeight=0,this._currentPageIndex=-1,this._skipKerning=!1;const t={...ut.defaultOptions,...e};this._textureSize=t.textureSize,this._mipmap=t.mipmap;const r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=R.WHITE,r._fill.fill=null),this.applyFillAsTint=t.overrideFill;const i=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const s=de(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/i):r.fontSize=this.baseRenderedFontSize=i,this._style=r,this._skipKerning=(n=t.skipKerning)!=null?n:!1,this.resolution=(a=t.resolution)!=null?a:1,this._padding=(l=t.padding)!=null?l:4,t.textureStyle&&(this._textureStyle=t.textureStyle instanceof ie?t.textureStyle:new ie(t.textureStyle)),this.fontMetrics=O.measureFont(s),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var _,p,v,y;const t=O.graphemeSegmenter(e).filter(b=>!this._currentChars.includes(b)).filter((b,w,P)=>P.indexOf(b)===w);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:i,context:s}=r.canvasAndContext,n=r.texture.source;const a=this._style;let l=this._currentX,u=this._currentY,c=this._currentMaxCharHeight;const d=this.baseRenderedFontSize/this.baseMeasurementFontSize,h=this._padding*d;let f=!1;const x=i.width/this.resolution,g=i.height/this.resolution;for(let b=0;b<t.length;b++){const w=t[b],P=O.measureText(w,a,i,!1);P.lineHeight=P.height;const B=P.width*d,S=Math.ceil((a.fontStyle==="italic"?2:1)*B),D=P.height*d,H=S+h*2,Q=D+h*2;if(f=!1,w!==`
`&&w!=="\r"&&w!=="	"&&w!==" "&&(f=!0,c=Math.ceil(Math.max(Q,c))),l+H>x&&(u+=c,c=Q,l=0,u+c>g)){n.update();const I=this._nextPage();i=I.canvasAndContext.canvas,s=I.canvasAndContext.context,n=I.texture.source,l=0,u=0,c=0}const se=B/d-((p=(_=a.dropShadow)==null?void 0:_.distance)!=null?p:0)-((y=(v=a._stroke)==null?void 0:v.width)!=null?y:0);if(this.chars[w]={id:w.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:se,kerning:{}},f){this._drawGlyph(s,P,l+h,u+h,d,a);const I=n.width*d,C=n.height*d,ge=new ue(l/I*n.width,u/C*n.height,H/I*n.width,Q/C*n.height);this.chars[w].texture=new R({source:n,frame:ge}),l+=Math.ceil(H)}}n.update(),this._currentX=l,this._currentY=u,this._currentMaxCharHeight=c,this._skipKerning&&this._applyKerning(t,s)}get pageTextures(){return k(U,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let i=0;i<e.length;i++){const s=e[i];for(let n=0;n<this._currentChars.length;n++){const a=this._currentChars[n];let l=r[s];l||(l=r[s]=t.measureText(s).width);let u=r[a];u||(u=r[a]=t.measureText(a).width);let c=t.measureText(s+a).width,d=c-(l+u);d&&(this.chars[s].kerning[a]=d),c=t.measureText(s+a).width,d=c-(l+u),d&&(this.chars[a].kerning[s]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=N.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new R({source:new Ot({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})});this._textureStyle&&(i.source.style=this._textureStyle);const s={canvasAndContext:t,texture:i};return this.pages[this._currentPageIndex]=s,s}_setupContext(e,t,r){var n;t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=de(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const i=t._stroke,s=(n=i==null?void 0:i.width)!=null?n:0;if(i&&(e.lineWidth=s,e.lineJoin=i.join,e.miterLimit=i.miterLimit,e.strokeStyle=fe(i,e)),t._fill&&(e.fillStyle=fe(t._fill,e)),t.dropShadow){const a=t.dropShadow,l=E.shared.setValue(a.color).toArray(),u=a.blur*r,c=a.distance*r;e.shadowColor=`rgba(${l[0]*255},${l[1]*255},${l[2]*255},${a.alpha})`,e.shadowBlur=u,e.shadowOffsetX=Math.cos(a.angle)*c,e.shadowOffsetY=Math.sin(a.angle)*c}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,i,s,n){var y;const a=t.text,l=t.fontProperties,u=n._stroke,c=((y=u==null?void 0:u.width)!=null?y:0)*s,d=r+c/2,h=i-c/2,f=l.descent*s,x=t.lineHeight*s;let g=!1;n.stroke&&c&&(g=!0,e.strokeText(a,d,h+x-f));const{shadowBlur:_,shadowOffsetX:p,shadowOffsetY:v}=e;n._fill&&(g&&(e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0),e.fillText(a,d,h+x-f)),g&&(e.shadowBlur=_,e.shadowOffsetX=p,e.shadowOffsetY=v)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];N.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};lt.defaultOptions={textureSize:512,style:new q,mipmap:!0};let Ae=lt;function ct(o,e,t,r){const i={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};i.offsetY=t.baseLineOffset;let s=i.lines[0],n=null,a=!0;const l={width:0,start:0,index:0,positions:[],chars:[]},u=t.baseMeasurementFontSize/e.fontSize,c=e.letterSpacing*u,d=e.wordWrapWidth*u,h=e.lineHeight?e.lineHeight*u:t.lineHeight,f=e.wordWrap&&e.breakWords,x=p=>{const v=s.width;for(let y=0;y<l.index;y++){const b=p.positions[y];s.chars.push(p.chars[y]),s.charPositions.push(b+v)}s.width+=p.width,a=!1,l.width=0,l.index=0,l.chars.length=0},g=()=>{let p=s.chars.length-1;if(r){let v=s.chars[p];for(;v===" ";)s.width-=t.chars[v].xAdvance,v=s.chars[--p]}i.width=Math.max(i.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,i.lines.push(s),i.height+=h},_=p=>p-c>d;for(let p=0;p<o.length+1;p++){let v;const y=p===o.length;y||(v=o[p]);const b=t.chars[v]||t.chars[" "];if(/(?:\s)/.test(v)||v==="\r"||v===`
`||y){if(!a&&e.wordWrap&&_(s.width+l.width)?(g(),x(l),y||s.charPositions.push(0)):(l.start=s.width,x(l),y||s.charPositions.push(0)),v==="\r"||v===`
`)g();else if(!y){const S=b.xAdvance+(b.kerning[n]||0)+c;s.width+=S,s.spaceWidth=S,s.spacesIndex.push(s.charPositions.length),s.chars.push(v)}}else{const B=b.kerning[n]||0,S=b.xAdvance+B+c;f&&_(s.width+l.width+S)&&(x(l),g()),l.positions[l.index++]=l.width+B,l.chars.push(v),l.width+=S}n=v}return g(),e.align==="center"?er(i):e.align==="right"?tr(i):e.align==="justify"&&rr(i),i}function er(o){for(let e=0;e<o.lines.length;e++){const t=o.lines[e],r=o.width/2-t.width/2;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function tr(o){for(let e=0;e<o.lines.length;e++){const t=o.lines[e],r=o.width-t.width;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function rr(o){const e=o.width;for(let t=0;t<o.lines.length;t++){const r=o.lines[t];let i=0,s=r.spacesIndex[i++],n=0;const a=r.spacesIndex.length,u=(e-r.width)/a;for(let c=0;c<r.charPositions.length;c++)c===s&&(s=r.spacesIndex[i++],n+=u),r.charPositions[c]+=n}}function ir(o){if(o==="")return[];typeof o=="string"&&(o=[o]);const e=[];for(let t=0,r=o.length;t<r;t++){const i=o[t];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const s=i[0].charCodeAt(0),n=i[1].charCodeAt(0);if(n<s)throw new Error("[BitmapFont]: Invalid character range.");for(let a=s,l=n;a<=l;a++)e.push(String.fromCharCode(a))}else e.push(...Array.from(i))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}let ae=0;class sr{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1,textureStyle:null},this.measureCache=ot(1e3)}getFont(e,t){var n;let r=`${t.fontFamily}-bitmap`,i=!0;if(t._fill.fill&&!t._stroke?(r+=t._fill.fill.styleKey,i=!1):(t._stroke||t.dropShadow)&&(r=`${t.styleKey}-bitmap`,i=!1),!G.has(r)){const a=Object.create(t);a.lineHeight=0;const l=new Ae({style:a,overrideFill:i,overrideSize:!0,...this.defaultOptions});ae++,ae>50&&j("BitmapText",`You have dynamically created ${ae} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),l.once("destroy",()=>{ae--,G.remove(r)}),G.set(r,l)}const s=G.get(r);return(n=s.ensureCharacters)==null||n.call(s,e),s}getLayout(e,t,r=!0){const i=this.getFont(e,t),s=`${e}-${t.styleKey}-${r}`;if(this.measureCache.has(s))return this.measureCache.get(s);const n=O.graphemeSegmenter(e),a=ct(n,t,i,r);return this.measureCache.set(s,a),a}measureText(e,t,r=!0){return this.getLayout(e,t,r)}install(...e){var u,c,d,h,f;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(u=e[2])==null?void 0:u.chars,resolution:(c=e[2])==null?void 0:c.resolution,padding:(d=e[2])==null?void 0:d.padding,skipKerning:(h=e[2])==null?void 0:h.skipKerning},k(U,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const i=t.style,s=i instanceof q?i:new q(i),n=(f=t.dynamicFill)!=null?f:this._canUseTintForStyle(s),a=new Ae({style:s,overrideFill:n,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1,textureStyle:t.textureStyle}),l=ir(t.chars);return a.ensureCharacters(l.join("")),G.set(`${r}-bitmap`,a),a.once("destroy",()=>G.remove(`${r}-bitmap`)),a}uninstall(e){const t=`${e}-bitmap`,r=G.get(t);r&&r.destroy()}_canUseTintForStyle(e){return!e._stroke&&(!e.dropShadow||e.dropShadow.color===0)&&!e._fill.fill&&e._fill.color===16777215}}const nr=new sr;var ar=`in vec2 aPosition;
out vec2 vTextureCoord;

uniform vec4 uInputSize;
uniform vec4 uOutputFrame;
uniform vec4 uOutputTexture;

vec4 filterVertexPosition( void )
{
    vec2 position = aPosition * uOutputFrame.zw + uOutputFrame.xy;
    
    position.x = position.x * (2.0 / uOutputTexture.x) - 1.0;
    position.y = position.y * (2.0*uOutputTexture.z / uOutputTexture.y) - uOutputTexture.z;

    return vec4(position, 0.0, 1.0);
}

vec2 filterTextureCoord( void )
{
    return aPosition * (uOutputFrame.zw * uInputSize.zw);
}

void main(void)
{
    gl_Position = filterVertexPosition();
    vTextureCoord = filterTextureCoord();
}
`,or=`in vec2 vTextureCoord;
out vec4 finalColor;
uniform sampler2D uTexture;
void main() {
    finalColor = texture(uTexture, vTextureCoord);
}
`,We=`struct GlobalFilterUniforms {
  uInputSize: vec4<f32>,
  uInputPixel: vec4<f32>,
  uInputClamp: vec4<f32>,
  uOutputFrame: vec4<f32>,
  uGlobalFrame: vec4<f32>,
  uOutputTexture: vec4<f32>,
};

@group(0) @binding(0) var <uniform> gfu: GlobalFilterUniforms;
@group(0) @binding(1) var uTexture: texture_2d<f32>;
@group(0) @binding(2) var uSampler: sampler;

struct VSOutput {
  @builtin(position) position: vec4<f32>,
  @location(0) uv: vec2<f32>
};

fn filterVertexPosition(aPosition: vec2<f32>) -> vec4<f32>
{
    var position = aPosition * gfu.uOutputFrame.zw + gfu.uOutputFrame.xy;

    position.x = position.x * (2.0 / gfu.uOutputTexture.x) - 1.0;
    position.y = position.y * (2.0 * gfu.uOutputTexture.z / gfu.uOutputTexture.y) - gfu.uOutputTexture.z;

    return vec4(position, 0.0, 1.0);
}

fn filterTextureCoord(aPosition: vec2<f32>) -> vec2<f32>
{
    return aPosition * (gfu.uOutputFrame.zw * gfu.uInputSize.zw);
}

@vertex
fn mainVertex(
  @location(0) aPosition: vec2<f32>,
) -> VSOutput {
  return VSOutput(
   filterVertexPosition(aPosition),
   filterTextureCoord(aPosition)
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
) -> @location(0) vec4<f32> {
    return textureSample(uTexture, uSampler, uv);
}
`;class lr extends jt{constructor(){const e=qe.from({vertex:{source:We,entryPoint:"mainVertex"},fragment:{source:We,entryPoint:"mainFragment"},name:"passthrough-filter"}),t=Qe.from({vertex:ar,fragment:or,name:"passthrough-filter"});super({gpuProgram:e,glProgram:t})}}class ht{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}ht.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"filter"};const Oe=new M;function ur(o,e){var r;e.clear();const t=e.matrix;for(let i=0;i<o.length;i++){const s=o[i];if(s.globalDisplayStatus<7)continue;const n=(r=s.renderGroup)!=null?r:s.parentRenderGroup;n!=null&&n.isCachedAsTexture?e.matrix=Oe.copyFrom(n.textureOffsetInverseTransform).append(s.worldTransform):n!=null&&n._parentCacheAsTextureRenderGroup?e.matrix=Oe.copyFrom(n._parentCacheAsTextureRenderGroup.inverseWorldTransform).append(s.groupTransform):e.matrix=s.worldTransform,e.addBounds(s.bounds)}return e.matrix=t,e}const cr=new Te({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class hr{constructor(){this.skip=!1,this.inputTexture=null,this.backTexture=null,this.filters=null,this.bounds=new Ze,this.container=null,this.blendRequired=!1,this.outputRenderSurface=null,this.globalFrame={x:0,y:0,width:0,height:0},this.firstEnabledIndex=-1,this.lastEnabledIndex=-1}}class dt{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new K({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new Je({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters,i=this._pushFilterData();i.skip=!1,i.filters=r,i.container=e.container,i.outputRenderSurface=t.renderTarget.renderSurface;const s=t.renderTarget.renderTarget.colorTexture.source,n=s.resolution,a=s.antialias;if(r.every(f=>!f.enabled)){i.skip=!0;return}const l=i.bounds;if(this._calculateFilterArea(e,l),this._calculateFilterBounds(i,t.renderTarget.rootViewPort,a,n,1),i.skip)return;const u=this._getPreviousFilterData(),c=this._findFilterResolution(n);let d=0,h=0;u&&(d=u.bounds.minX,h=u.bounds.minY),this._calculateGlobalFrame(i,d,h,c,s.width,s.height),this._setupFilterTextures(i,l,t,u)}generateFilteredTexture({texture:e,filters:t}){const r=this._pushFilterData();this._activeFilterData=r,r.skip=!1,r.filters=t;const i=e.source,s=i.resolution,n=i.antialias;if(t.every(f=>!f.enabled))return r.skip=!0,e;const a=r.bounds;if(a.addRect(e.frame),this._calculateFilterBounds(r,a.rectangle,n,s,0),r.skip)return e;const l=s;this._calculateGlobalFrame(r,0,0,l,i.width,i.height),r.outputRenderSurface=A.getOptimalTexture(a.width,a.height,r.resolution,r.antialias),r.backTexture=R.EMPTY,r.inputTexture=e,this.renderer.renderTarget.finishRenderPass(),this._applyFiltersToTexture(r,!0);const h=r.outputRenderSurface;return h.source.alphaMode="premultiplied-alpha",h}pop(){const e=this.renderer,t=this._popFilterData();t.skip||(e.globalUniforms.pop(),e.renderTarget.finishRenderPass(),this._activeFilterData=t,this._applyFiltersToTexture(t,!1),t.blendRequired&&A.returnTexture(t.backTexture),A.returnTexture(t.inputTexture))}getBackTexture(e,t,r){const i=e.colorTexture.source._resolution,s=A.getOptimalTexture(t.width,t.height,i,!1);let n=t.minX,a=t.minY;r&&(n-=r.minX,a-=r.minY),n=Math.floor(n*i),a=Math.floor(a*i);const l=Math.ceil(t.width*i),u=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,s,{x:n,y:a},{width:l,height:u},{x:0,y:0}),s}applyFilter(e,t,r,i){const s=this.renderer,n=this._activeFilterData,l=n.outputRenderSurface===r,u=s.renderTarget.rootRenderTarget.colorTexture.source._resolution,c=this._findFilterResolution(u);let d=0,h=0;if(l){const x=this._findPreviousFilterOffset();d=x.x,h=x.y}this._updateFilterUniforms(t,r,n,d,h,c,l,i);const f=e.enabled?e:this._getPassthroughFilter();this._setupBindGroupsAndRender(f,t,s)}calculateSpriteMatrix(e,t){const r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),s=t.worldTransform.copyTo(M.shared),n=t.renderGroup||t.parentRenderGroup;return n&&n.cacheToLocalTransform&&s.prepend(n.cacheToLocalTransform),s.invert(),i.prepend(s),i.scale(1/t.texture.orig.width,1/t.texture.orig.height),i.translate(t.anchor.x,t.anchor.y),i}destroy(){var e;(e=this._passthroughFilter)==null||e.destroy(!0),this._passthroughFilter=null}_getPassthroughFilter(){var e;return(e=this._passthroughFilter)!=null||(this._passthroughFilter=new lr),this._passthroughFilter}_setupBindGroupsAndRender(e,t,r){if(r.renderPipes.uniformBatch){const i=r.renderPipes.uniformBatch.getUboResource(this._filterGlobalUniforms);this._globalFilterBindGroup.setResource(i,0)}else this._globalFilterBindGroup.setResource(this._filterGlobalUniforms,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,r.encoder.draw({geometry:cr,shader:e,state:e._state,topology:"triangle-list"}),r.type===we.WEBGL&&r.renderTarget.finishRenderPass()}_setupFilterTextures(e,t,r,i){if(e.backTexture=R.EMPTY,e.inputTexture=A.getOptimalTexture(t.width,t.height,e.resolution,e.antialias),e.blendRequired){r.renderTarget.finishRenderPass();const s=r.renderTarget.getRenderTarget(e.outputRenderSurface);e.backTexture=this.getBackTexture(s,t,i==null?void 0:i.bounds)}r.renderTarget.bind(e.inputTexture,!0),r.globalUniforms.push({offset:t})}_calculateGlobalFrame(e,t,r,i,s,n){const a=e.globalFrame;a.x=t*i,a.y=r*i,a.width=s*i,a.height=n*i}_updateFilterUniforms(e,t,r,i,s,n,a,l){const u=this._filterGlobalUniforms.uniforms,c=u.uOutputFrame,d=u.uInputSize,h=u.uInputPixel,f=u.uInputClamp,x=u.uGlobalFrame,g=u.uOutputTexture;a?(c[0]=r.bounds.minX-i,c[1]=r.bounds.minY-s):(c[0]=0,c[1]=0),c[2]=e.frame.width,c[3]=e.frame.height,d[0]=e.source.width,d[1]=e.source.height,d[2]=1/d[0],d[3]=1/d[1],h[0]=e.source.pixelWidth,h[1]=e.source.pixelHeight,h[2]=1/h[0],h[3]=1/h[1],f[0]=.5*h[2],f[1]=.5*h[3],f[2]=e.frame.width*d[2]-.5*h[2],f[3]=e.frame.height*d[3]-.5*h[3];const _=this.renderer.renderTarget.rootRenderTarget.colorTexture;x[0]=i*n,x[1]=s*n,x[2]=_.source.width*n,x[3]=_.source.height*n,t instanceof R&&(t.source.resource=null);const p=this.renderer.renderTarget.getRenderTarget(t);this.renderer.renderTarget.bind(t,!!l),t instanceof R?(g[0]=t.frame.width,g[1]=t.frame.height):(g[0]=p.width,g[1]=p.height),g[2]=p.isRoot?-1:1,this._filterGlobalUniforms.update()}_findFilterResolution(e){let t=this._filterStackIndex-1;for(;t>0&&this._filterStack[t].skip;)--t;return t>0&&this._filterStack[t].inputTexture?this._filterStack[t].inputTexture.source._resolution:e}_findPreviousFilterOffset(){let e=0,t=0,r=this._filterStackIndex;for(;r>0;){r--;const i=this._filterStack[r];if(!i.skip){e=i.bounds.minX,t=i.bounds.minY;break}}return{x:e,y:t}}_calculateFilterArea(e,t){if(e.renderables?ur(e.renderables,t):e.filterEffect.filterArea?(t.clear(),t.addRect(e.filterEffect.filterArea),t.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,t),e.container){const i=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;i&&t.applyMatrix(i)}}_applyFiltersToTexture(e,t){const r=e.inputTexture,i=e.bounds,s=e.filters,n=e.firstEnabledIndex,a=e.lastEnabledIndex;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(e.backTexture.source,3),n===a)s[n].apply(this,r,e.outputRenderSurface,t);else{let l=e.inputTexture;const u=A.getOptimalTexture(i.width,i.height,l.source._resolution,!1);let c=u;for(let d=n;d<a;d++){const h=s[d];if(!h.enabled)continue;h.apply(this,l,c,!0);const f=l;l=c,c=f}s[a].apply(this,l,e.outputRenderSurface,t),A.returnTexture(u)}}_calculateFilterBounds(e,t,r,i,s){var p,v;const n=this.renderer,a=e.bounds,l=e.filters;let u=1/0,c=0,d=!0,h=!1,f=!1,x=!0,g=-1,_=-1;for(let y=0;y<l.length;y++){const b=l[y];if(!b.enabled)continue;if(g===-1&&(g=y),_=y,u=Math.min(u,b.resolution==="inherit"?i:b.resolution),c+=b.padding,b.antialias==="off"?d=!1:b.antialias==="inherit"&&d&&(d=r),b.clipToViewport||(x=!1),!!!(b.compatibleRenderers&n.type)){f=!1;break}if(b.blendRequired&&!((v=(p=n.backBuffer)==null?void 0:p.useBackBuffer)==null||v)){j("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),f=!1;break}f=!0,h||(h=b.blendRequired)}if(!f){e.skip=!0;return}if(x&&a.fitBounds(0,t.width/i,0,t.height/i),a.scale(u).ceil().scale(1/u).pad((c|0)*s),!a.isPositive){e.skip=!0;return}e.antialias=d,e.resolution=u,e.blendRequired=h,e.firstEnabledIndex=g,e.lastEnabledIndex=_}_popFilterData(){return this._filterStackIndex--,this._filterStack[this._filterStackIndex]}_getPreviousFilterData(){let e,t=this._filterStackIndex-1;for(;t>0&&(t--,e=this._filterStack[t],!!e.skip););return e}_pushFilterData(){let e=this._filterStack[this._filterStackIndex];return e||(e=this._filterStack[this._filterStackIndex]=new hr),this._filterStackIndex++,e}}dt.extension={type:[T.WebGLSystem,T.WebGPUSystem],name:"filter"};const ft=class pt extends Te{constructor(...e){var c;let t=(c=e[0])!=null?c:{};t instanceof Float32Array&&(k(U,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...pt.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]);let i=t.uvs;i||(t.positions?i=new Float32Array(r.length):i=new Float32Array([0,0,1,0,1,1,0,1]));const s=t.indices||new Uint32Array([0,1,2,0,2,3]),n=t.shrinkBuffersToFit,a=new re({data:r,label:"attribute-mesh-positions",shrinkToFit:n,usage:W.VERTEX|W.COPY_DST}),l=new re({data:i,label:"attribute-mesh-uvs",shrinkToFit:n,usage:W.VERTEX|W.COPY_DST}),u=new re({data:s,label:"index-mesh-buffer",shrinkToFit:n,usage:W.INDEX|W.COPY_DST});super({attributes:{aPosition:{buffer:a,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:l,format:"float32x2",stride:2*4,offset:0}},indexBuffer:u,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};ft.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let Fe=ft,V=null,L=null;function dr(o,e){V||(V=Y.get().createCanvas(256,128),L=V.getContext("2d",{willReadFrequently:!0}),L.globalCompositeOperation="copy",L.globalAlpha=1),(V.width<o||V.height<e)&&(V.width=ze(o),V.height=ze(e))}function De(o,e,t){for(let r=0,i=4*t*e;r<e;++r,i+=4)if(o[i+3]!==0)return!1;return!0}function Ie(o,e,t,r,i){const s=4*e;for(let n=r,a=r*s+4*t;n<=i;++n,a+=s)if(o[a+3]!==0)return!1;return!0}function fr(...o){var f,x,g;let e=o[0];e.canvas||(e={canvas:o[0],resolution:o[1]});const{canvas:t}=e,r=Math.min((f=e.resolution)!=null?f:1,1),i=(x=e.width)!=null?x:t.width,s=(g=e.height)!=null?g:t.height;let n=e.output;if(dr(i,s),!L)throw new TypeError("Failed to get canvas 2D context");L.drawImage(t,0,0,i,s,0,0,i*r,s*r);const l=L.getImageData(0,0,i,s).data;let u=0,c=0,d=i-1,h=s-1;for(;c<s&&De(l,i,c);)++c;if(c===s)return ue.EMPTY;for(;De(l,i,h);)--h;for(;Ie(l,i,u,c,h);)++u;for(;Ie(l,i,d,c,h);)--d;return++d,++h,L.globalCompositeOperation="source-over",L.strokeRect(u,c,d-u,h-c),L.globalCompositeOperation="copy",n!=null||(n=new ue),n.set(u/r,c/r,(d-u)/r,(h-c)/r),n}const Le=new ue;class pr{getCanvasAndContext(e){const{text:t,style:r,resolution:i=1}=e,s=r._getFinalPadding(),n=O.measureText(t||" ",r),a=Math.ceil(Math.ceil(Math.max(1,n.width)+s*2)*i),l=Math.ceil(Math.ceil(Math.max(1,n.height)+s*2)*i),u=N.getOptimalCanvasAndContext(a,l);this._renderTextToCanvas(t,r,s,i,u);const c=r.trim?fr({canvas:u.canvas,width:a,height:l,resolution:1,output:Le}):Le.set(0,0,a,l);return{canvasAndContext:u,frame:c}}returnCanvasAndContext(e){N.returnCanvasAndContext(e)}_renderTextToCanvas(e,t,r,i,s){var y,b,w,P,B;const{canvas:n,context:a}=s,l=de(t),u=O.measureText(e||" ",t),c=u.lines,d=u.lineHeight,h=u.lineWidths,f=u.maxLineWidth,x=u.fontProperties,g=n.height;if(a.resetTransform(),a.scale(i,i),a.textBaseline=t.textBaseline,(y=t._stroke)!=null&&y.width){const S=t._stroke;a.lineWidth=S.width,a.miterLimit=S.miterLimit,a.lineJoin=S.join,a.lineCap=S.cap}a.font=l;let _,p;const v=t.dropShadow?2:1;for(let S=0;S<v;++S){const D=t.dropShadow&&S===0,H=D?Math.ceil(Math.max(1,g)+r*2):0,Q=H*i;if(D){a.fillStyle="black",a.strokeStyle="black";const C=t.dropShadow,ge=C.color,zt=C.alpha;a.shadowColor=E.shared.setValue(ge).setAlpha(zt).toRgbaString();const Gt=C.blur*i,ke=C.distance*i;a.shadowBlur=Gt,a.shadowOffsetX=Math.cos(C.angle)*ke,a.shadowOffsetY=Math.sin(C.angle)*ke+Q}else{if(a.fillStyle=t._fill?fe(t._fill,a,u,r*2):null,(b=t._stroke)!=null&&b.width){const C=t._stroke.width*.5+r*2;a.strokeStyle=fe(t._stroke,a,u,C)}a.shadowColor="black"}let se=(d-x.fontSize)/2;d-x.fontSize<0&&(se=0);const I=(P=(w=t._stroke)==null?void 0:w.width)!=null?P:0;for(let C=0;C<c.length;C++)_=I/2,p=I/2+C*d+x.ascent+se,t.align==="right"?_+=f-h[C]:t.align==="center"&&(_+=(f-h[C])/2),(B=t._stroke)!=null&&B.width&&this._drawLetterSpacing(c[C],t,s,_+r,p+r-H,!0),t._fill!==void 0&&this._drawLetterSpacing(c[C],t,s,_+r,p+r-H)}}_drawLetterSpacing(e,t,r,i,s,n=!1){const{context:a}=r,l=t.letterSpacing;let u=!1;if(O.experimentalLetterSpacingSupported&&(O.experimentalLetterSpacing?(a.letterSpacing=`${l}px`,a.textLetterSpacing=`${l}px`,u=!0):(a.letterSpacing="0px",a.textLetterSpacing="0px")),l===0||u){n?a.strokeText(e,i,s):a.fillText(e,i,s);return}let c=i;const d=O.graphemeSegmenter(e);let h=a.measureText(e).width,f=0;for(let x=0;x<d.length;++x){const g=d[x];n?a.strokeText(g,c,s):a.fillText(g,c,s);let _="";for(let p=x+1;p<d.length;++p)_+=d[p];f=a.measureText(_).width,c+=h-f+l,h=f}}}const xe=new pr,Ee="http://www.w3.org/2000/svg",He="http://www.w3.org/1999/xhtml";class gt{constructor(){this.svgRoot=document.createElementNS(Ee,"svg"),this.foreignObject=document.createElementNS(Ee,"foreignObject"),this.domElement=document.createElementNS(He,"div"),this.styleElement=document.createElementNS(He,"style");const{foreignObject:e,svgRoot:t,styleElement:r,domElement:i}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(i),this.image=Y.get().createImage()}destroy(){this.svgRoot.remove(),this.foreignObject.remove(),this.styleElement.remove(),this.domElement.remove(),this.image.src="",this.image.remove(),this.svgRoot=null,this.foreignObject=null,this.styleElement=null,this.domElement=null,this.image=null,this.canvasAndContext=null}}let Ve;function gr(o,e,t,r){r||(r=Ve||(Ve=new gt));const{domElement:i,styleElement:s,svgRoot:n}=r;i.innerHTML=`<style>${e.cssStyle};</style><div style='padding:0'>${o}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(s.textContent=t),document.body.appendChild(n);const a=i.getBoundingClientRect();n.remove();const l=e.padding*2;return{width:a.width-l,height:a.height-l}}class mr{constructor(){this.batches=[],this.batched=!1}destroy(){this.batches.forEach(e=>{ce.return(e)}),this.batches.length=0}}class mt{constructor(e,t){this.state=he.for2d(),this.renderer=e,this._adaptor=t,this.renderer.runners.contextChange.add(this)}contextChange(){this._adaptor.contextChange(this.renderer)}validateRenderable(e){const t=e.context,r=!!e._gpuData,i=this.renderer.graphicsContext.updateGpuContext(t);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const r=this._getGpuDataForRenderable(e).batches;for(let i=0;i<r.length;i++){const s=r[i];s._batcher.updateElement(s)}}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const s=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const n=s.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,pe(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=this._getGpuDataForRenderable(e),r=this.renderer.graphicsContext.updateGpuContext(e.context);t.destroy(),r.isBatchable&&this._updateBatchesForRenderable(e,t)}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,i=this._getGpuDataForRenderable(e).batches;for(let s=0;s<i.length;s++){const n=i[s];r.addToBatch(n,t)}}_getGpuDataForRenderable(e){return e._gpuData[this.renderer.uid]||this._initGpuDataForRenderable(e)}_initGpuDataForRenderable(e){const t=new mr;return e._gpuData[this.renderer.uid]=t,t}_updateBatchesForRenderable(e,t){const r=e.context,i=this.renderer.graphicsContext.getGpuContext(r),s=this.renderer._roundPixels|e._roundPixels;t.batches=i.batches.map(n=>{const a=ce.get(Dt);return n.copyTo(a),a.renderable=e,a.roundPixels=s,a})}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null}}mt.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"graphics"};const xt=class _t extends Fe{constructor(...e){var r;super({});let t=(r=e[0])!=null?r:{};typeof t=="number"&&(k(U,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){var d,h,f,x;e={..._t.defaultOptions,...e},this.verticesX=(d=this.verticesX)!=null?d:e.verticesX,this.verticesY=(h=this.verticesY)!=null?h:e.verticesY,this.width=(f=this.width)!=null?f:e.width,this.height=(x=this.height)!=null?x:e.height;const t=this.verticesX*this.verticesY,r=[],i=[],s=[],n=this.verticesX-1,a=this.verticesY-1,l=this.width/n,u=this.height/a;for(let g=0;g<t;g++){const _=g%this.verticesX,p=g/this.verticesX|0;r.push(_*l,p*u),i.push(_/n,p/a)}const c=n*a;for(let g=0;g<c;g++){const _=g%n,p=g/n|0,v=p*this.verticesX+_,y=p*this.verticesX+_+1,b=(p+1)*this.verticesX+_,w=(p+1)*this.verticesX+_+1;s.push(v,y,b,y,w,b)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};xt.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let xr=xt;class Be{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const t=this.geometry.getBuffer("aUV"),r=t.data;let i=r;const s=this.texture.textureMatrix;return s.isSimple||(i=this._transformedUvs,(this._textureMatrixUpdateId!==s._updateID||this._uvUpdateId!==t._updateID)&&((!i||i.length<r.length)&&(i=this._transformedUvs=new Float32Array(r.length)),this._textureMatrixUpdateId=s._updateID,this._uvUpdateId=t._updateID,s.multiplyUvs(r,i))),i}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class Ye{destroy(){}}class yt{constructor(e,t){this.localUniforms=new K({uTransformMatrix:{value:new M,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new Je({0:this.localUniforms}),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){const s=e._geometry;if(s.indices.length!==t.indexSize||s.positions.length!==t.vertexSize)return t.indexSize=s.indices.length,t.vertexSize=s.positions.length,!0;const n=this._getBatchableMesh(e);return n.texture.uid!==e._texture.uid&&(n._textureMatrixUpdateId=-1),!n._batcher.checkAndUpdateTexture(n,e._texture)}return!1}addRenderable(e,t){var s,n;const r=this.renderer.renderPipes.batch,i=this._getMeshData(e);if(e.didViewUpdate&&(i.indexSize=(s=e._geometry.indices)==null?void 0:s.length,i.vertexSize=(n=e._geometry.positions)==null?void 0:n.length),i.batched){const a=this._getBatchableMesh(e);a.setTexture(e._texture),a.geometry=e._geometry,r.addToBatch(a,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._getBatchableMesh(e);t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}execute(e){if(!e.isRenderable)return;e.state.blendMode=Se(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),pe(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new Ye),e._gpuData[this.renderer.uid].meshData||this._initMeshData(e)}_initMeshData(e){return e._gpuData[this.renderer.uid].meshData={batched:e.batched,indexSize:0,vertexSize:0},e._gpuData[this.renderer.uid].meshData}_getBatchableMesh(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new Ye),e._gpuData[this.renderer.uid].batchableMesh||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=new Be;return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,e._gpuData[this.renderer.uid].batchableMesh=t,t}destroy(){this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}yt.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"mesh"};class _r{execute(e,t){const r=e.state,i=e.renderer,s=t.shader||e.defaultShader;s.resources.uTexture=t.texture._source,s.resources.uniforms=e.localUniforms;const n=i.gl,a=e.getBuffers(t);i.shader.bind(s),i.state.set(r),i.geometry.bind(a.geometry,s.glProgram);const u=a.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?n.UNSIGNED_SHORT:n.UNSIGNED_INT;n.drawElements(n.TRIANGLES,t.particleChildren.length*6,u,0)}}class yr{execute(e,t){const r=e.renderer,i=t.shader||e.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(t.texture);const s=e.state,n=e.getBuffers(t);r.encoder.draw({geometry:n.geometry,shader:t.shader||e.defaultShader,state:s,size:t.particleChildren.length*6})}}function Xe(o,e=null){const t=o*6;if(t>65535?e||(e=new Uint32Array(t)):e||(e=new Uint16Array(t)),e.length!==t)throw new Error(`Out buffer length is incorrect, got ${e.length} and expected ${t}`);for(let r=0,i=0;r<t;r+=6,i+=4)e[r+0]=i+0,e[r+1]=i+1,e[r+2]=i+2,e[r+3]=i+0,e[r+4]=i+2,e[r+5]=i+3;return e}function br(o){return{dynamicUpdate:$e(o,!0),staticUpdate:$e(o,!1)}}function $e(o,e){const t=[];t.push(`

        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const s in o){const n=o[s];if(e!==n.dynamic)continue;t.push(`offset = index + ${r}`),t.push(n.code);const a=ye(n.format);r+=a.stride/4}t.push(`
            index += stride * 4;
        }
    `),t.unshift(`
        var stride = ${r};
    `);const i=t.join(`
`);return new Function("ps","f32v","u32v",i)}class vr{constructor(e){var c;this._size=0,this._generateParticleUpdateCache={};const t=this._size=(c=e.size)!=null?c:1e3,r=e.properties;let i=0,s=0;for(const d in r){const h=r[d],f=ye(h.format);h.dynamic?s+=f.stride:i+=f.stride}this._dynamicStride=s/4,this._staticStride=i/4,this.staticAttributeBuffer=new ne(t*4*i),this.dynamicAttributeBuffer=new ne(t*4*s),this.indexBuffer=Xe(t);const n=new Te;let a=0,l=0;this._staticBuffer=new re({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:W.VERTEX|W.COPY_DST}),this._dynamicBuffer=new re({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:W.VERTEX|W.COPY_DST});for(const d in r){const h=r[d],f=ye(h.format);h.dynamic?(n.addAttribute(h.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:a*4,format:h.format}),a+=f.size):(n.addAttribute(h.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:l*4,format:h.format}),l+=f.size)}n.addIndex(this.indexBuffer);const u=this.getParticleUpdate(r);this._dynamicUpload=u.dynamicUpdate,this._staticUpload=u.staticUpdate,this.geometry=n}getParticleUpdate(e){const t=Tr(e);return this._generateParticleUpdateCache[t]?this._generateParticleUpdateCache[t]:(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e),this._generateParticleUpdateCache[t])}generateParticleUpdate(e){return br(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,this._size*1.5|0),this.staticAttributeBuffer=new ne(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new ne(this._size*this._dynamicStride*4*4),this.indexBuffer=Xe(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const i=this.staticAttributeBuffer;this._staticUpload(e,i.float32View,i.uint32View),this._staticBuffer.setDataWithSize(i.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function Tr(o){const e=[];for(const t in o){const r=o[t];e.push(t,r.code,r.dynamic?"d":"s")}return e.join("_")}var wr=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,Sr=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;
}
`,je=`
struct ParticleUniforms {
  uTranslationMatrix:mat3x3<f32>,
  uColor:vec4<f32>,
  uRound:f32,
  uResolution:vec2<f32>,
};

fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32>
{
  return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   var position = vec4((uniforms.uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

   if(uniforms.uRound == 1.0) {
       position = vec4(roundPixels(position.xy, uniforms.uResolution), position.zw);
   }

    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;

  return VSOutput(
   position,
   aUV,
   vColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class Cr extends Ce{constructor(){const e=Qe.from({vertex:Sr,fragment:wr}),t=qe.from({fragment:{source:je,entryPoint:"mainFragment"},vertex:{source:je,entryPoint:"mainVertex"}});super({glProgram:e,gpuProgram:t,resources:{uTexture:R.WHITE.source,uSampler:new ie({}),uniforms:{uTranslationMatrix:{value:new M,type:"mat3x3<f32>"},uColor:{value:new E(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class bt{constructor(e,t){this.state=he.for2d(),this.localUniforms=new K({uTranslationMatrix:{value:new M,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new Cr,this.state=he.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return e._gpuData[this.renderer.uid]||this._initBuffer(e)}_initBuffer(e){return e._gpuData[this.renderer.uid]=new vr({size:e.particleChildren.length,properties:e._properties}),e._gpuData[this.renderer.uid]}updateRenderable(e){}execute(e){const t=e.particleChildren;if(t.length===0)return;const r=this.renderer,i=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const s=this.state;i.update(t,e._childrenDirty),e._childrenDirty=!1,s.blendMode=Se(e.blendMode,e.texture._source);const n=this.localUniforms.uniforms,a=n.uTranslationMatrix;e.worldTransform.copyTo(a),a.prepend(r.globalUniforms.globalUniformData.projectionMatrix),n.uResolution=r.globalUniforms.globalUniformData.resolution,n.uRound=r._roundPixels|e._roundPixels,pe(e.groupColorAlpha,n.uColor,0),this.adaptor.execute(this,e)}destroy(){this.renderer=null,this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class vt extends bt{constructor(e){super(e,new _r)}}vt.extension={type:[T.WebGLPipes],name:"particle"};class Tt extends bt{constructor(e){super(e,new yr)}}Tt.extension={type:[T.WebGPUPipes],name:"particle"};const wt=class St extends xr{constructor(e={}){e={...St.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){var t,r,i,s,n,a,l,u,c,d;this.width=(t=e.width)!=null?t:this.width,this.height=(r=e.height)!=null?r:this.height,this._originalWidth=(i=e.originalWidth)!=null?i:this._originalWidth,this._originalHeight=(s=e.originalHeight)!=null?s:this._originalHeight,this._leftWidth=(n=e.leftWidth)!=null?n:this._leftWidth,this._rightWidth=(a=e.rightWidth)!=null?a:this._rightWidth,this._topHeight=(l=e.topHeight)!=null?l:this._topHeight,this._bottomHeight=(u=e.bottomHeight)!=null?u:this._bottomHeight,this._anchorX=(c=e.anchor)==null?void 0:c.x,this._anchorY=(d=e.anchor)==null?void 0:d.y,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,{width:t,height:r,_leftWidth:i,_rightWidth:s,_topHeight:n,_bottomHeight:a,_anchorX:l,_anchorY:u}=this,c=i+s,d=t>c?1:t/c,h=n+a,f=r>h?1:r/h,x=Math.min(d,f),g=l*t,_=u*r;e[0]=e[8]=e[16]=e[24]=-g,e[2]=e[10]=e[18]=e[26]=i*x-g,e[4]=e[12]=e[20]=e[28]=t-s*x-g,e[6]=e[14]=e[22]=e[30]=t-g,e[1]=e[3]=e[5]=e[7]=-_,e[9]=e[11]=e[13]=e[15]=n*x-_,e[17]=e[19]=e[21]=e[23]=r-a*x-_,e[25]=e[27]=e[29]=e[31]=r-_,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};wt.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Pr=wt;class Fr extends Be{constructor(){super(),this.geometry=new Pr}destroy(){this.geometry.destroy()}}class Ct{constructor(e){this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return e._gpuData[this._renderer.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=e._gpuData[this._renderer.uid]=new Fr,r=t;return r.renderable=e,r.transform=e.groupTransform,r.texture=e._texture,r.roundPixels=this._renderer._roundPixels|e._roundPixels,e.didViewUpdate||this._updateBatchableSprite(e,r),t}destroy(){this._renderer=null}}Ct.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"nineSliceSprite"};const Br={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            }

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},kr={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;

        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);

        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0

        `}};let J,Z;class Rr extends Ce{constructor(){J!=null||(J=et({name:"tiling-sprite-shader",bits:[Kt,Br,tt]})),Z!=null||(Z=rt({name:"tiling-sprite-shader",bits:[Nt,kr,it]}));const e=new K({uMapCoord:{value:new M,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new M,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:Z,gpuProgram:J,resources:{localUniforms:new K({uTransformMatrix:{value:new M,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:R.EMPTY.source,uSampler:R.EMPTY.source.style}})}updateUniforms(e,t,r,i,s,n){const a=this.resources.tilingUniforms,l=n.width,u=n.height,c=n.textureMatrix,d=a.uniforms.uTextureTransform;d.set(r.a*l/e,r.b*l/t,r.c*u/e,r.d*u/t,r.tx/e,r.ty/t),d.invert(),a.uniforms.uMapCoord=c.mapCoord,a.uniforms.uClampFrame=c.uClampFrame,a.uniforms.uClampOffset=c.uClampOffset,a.uniforms.uTextureTransform=d,a.uniforms.uSizeAnchor[0]=e,a.uniforms.uSizeAnchor[1]=t,a.uniforms.uSizeAnchor[2]=i,a.uniforms.uSizeAnchor[3]=s,n&&(this.resources.uTexture=n.source,this.resources.uSampler=n.source.style)}}class Mr extends Fe{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Ur(o,e){const t=o.anchor.x,r=o.anchor.y;e[0]=-t*o.width,e[1]=-r*o.height,e[2]=(1-t)*o.width,e[3]=-r*o.height,e[4]=(1-t)*o.width,e[5]=(1-r)*o.height,e[6]=-t*o.width,e[7]=(1-r)*o.height}function zr(o,e,t,r){let i=0;const s=o.length/e,n=r.a,a=r.b,l=r.c,u=r.d,c=r.tx,d=r.ty;for(t*=e;i<s;){const h=o[t],f=o[t+1];o[t]=n*h+l*f+c,o[t+1]=a*h+u*f+d,t+=e,i++}}function Gr(o,e){const t=o.texture,r=t.frame.width,i=t.frame.height;let s=0,n=0;o.applyAnchorToTexture&&(s=o.anchor.x,n=o.anchor.y),e[0]=e[6]=-s,e[2]=e[4]=1-s,e[1]=e[3]=-n,e[5]=e[7]=1-n;const a=M.shared;a.copyFrom(o._tileTransform.matrix),a.tx/=o.width,a.ty/=o.height,a.invert(),a.scale(o.width/r,o.height/i),zr(e,2,0,a)}const oe=new Mr;class Ar{constructor(){this.canBatch=!0,this.geometry=new Fe({indices:oe.indices.slice(),positions:oe.positions.slice(),uvs:oe.uvs.slice()})}destroy(){var e;this.geometry.destroy(),(e=this.shader)==null||e.destroy()}}class Pt{constructor(e){this._state=he.default2d,this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const i=t.canBatch;if(i&&i===r){const{batchableMesh:s}=t;return!s._batcher.checkAndUpdateTexture(s,e.texture)}return r!==i}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const i=this._getTilingSpriteData(e),{geometry:s,canBatch:n}=i;if(n){i.batchableMesh||(i.batchableMesh=new Be);const a=i.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),a.geometry=s,a.renderable=e,a.transform=e.groupTransform,a.setTexture(e._texture)),a.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(a,t)}else r.break(t),i.shader||(i.shader=new Rr),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._getTilingSpriteData(e);t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,pe(e.groupColorAlpha,r.uColor,0),this._state.blendMode=Se(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:oe,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:i}=t;e.didViewUpdate&&this._updateBatchableMesh(e),i._batcher.updateElement(i)}else if(e.didViewUpdate){const{shader:i}=t;i.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}_getTilingSpriteData(e){return e._gpuData[this._renderer.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new Ar;return t.renderable=e,e._gpuData[this._renderer.uid]=t,t}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,i=e.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),Gr(e,r.uvs),Ur(e,r.positions)}destroy(){this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let i=!0;return this._renderer.type===we.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}}Pt.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"tilingSprite"};const Wr={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:`
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},Or={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:`
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},Dr={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {

                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));

                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;

            }
        `}},Ir={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {

                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));

                // SDF
                median = min(median, msdfColor.a);

                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);

                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);

                return coverage;
            }
        `}};let ee,te;class Lr extends Ce{constructor(e){const t=new K({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new M,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}});ee!=null||(ee=et({name:"sdf-shader",bits:[It,Lt(e),Wr,Dr,tt]})),te!=null||(te=rt({name:"sdf-shader",bits:[Et,Ht(e),Or,Ir,it]})),super({glProgram:te,gpuProgram:ee,resources:{localUniforms:t,batchSamplers:Vt(e)}})}}class Er extends Yt{destroy(){this.context.customShader&&this.context.customShader.destroy(),super.destroy()}}class Ft{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Ke(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}updateRenderable(e){const t=this._getGpuBitmapText(e);Ke(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,i=nr.getFont(e.text,e._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=new Lr(this._renderer.limits.maxBatchableTextures)));const s=O.graphemeSegmenter(e.text),n=e._style;let a=i.baseLineOffset;const l=ct(s,n,i,!0),u=n.padding,c=l.scale;let d=l.width,h=l.height+l.offsetY;n._stroke&&(d+=n._stroke.width/c,h+=n._stroke.width/c),r.translate(-e._anchor._x*d-u,-e._anchor._y*h-u).scale(c,c);const f=i.applyFillAsTint?n._fill.color:16777215;let x=i.fontMetrics.fontSize,g=i.lineHeight;n.lineHeight&&(x=n.fontSize/c,g=n.lineHeight/c);let _=(g-x)/2;_-i.baseLineOffset<0&&(_=0);for(let p=0;p<l.lines.length;p++){const v=l.lines[p];for(let y=0;y<v.charPositions.length;y++){const b=v.chars[y],w=i.chars[b];if(w!=null&&w.texture){const P=w.texture;r.texture(P,f||"black",Math.round(v.charPositions[y]+w.xOffset),Math.round(a+w.yOffset+_),P.orig.width,P.orig.height)}}a+=g}}_getGpuBitmapText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new Er;return e._gpuData[this._renderer.uid]=t,this._updateContext(e,t),t}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=G.get(`${r}-bitmap`),{a:s,b:n,c:a,d:l}=e.groupTransform,u=Math.sqrt(s*s+n*n),c=Math.sqrt(a*a+l*l),d=(Math.abs(u)+Math.abs(c))/2,h=i.baseRenderedFontSize/e._style.fontSize,f=d*i.distanceField.range*(1/h);t.customShader.resources.localUniforms.uniforms.uDistance=f}destroy(){this._renderer=null}}Ft.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"bitmapText"};function Ke(o,e){e.groupTransform=o.groupTransform,e.groupColorAlpha=o.groupColorAlpha,e.groupColor=o.groupColor,e.groupBlendMode=o.groupBlendMode,e.globalDisplayStatus=o.globalDisplayStatus,e.groupTransform=o.groupTransform,e.localDisplayStatus=o.localDisplayStatus,e.groupAlpha=o.groupAlpha,e._roundPixels=o._roundPixels}class Hr extends st{constructor(e){super(),this.generatingTexture=!1,this.currentKey="--",this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){const{htmlText:e}=this._renderer;e.getReferenceCount(this.currentKey)===null?e.returnTexturePromise(this.texturePromise):e.decreaseReferenceCount(this.currentKey),this._renderer.runners.resolutionChange.remove(this),this.texturePromise=null,this._renderer=null}}function be(o,e){const{texture:t,bounds:r}=o,i=e._style._getFinalPadding();Xt(r,e._anchor,t);const s=e._anchor._x*i*2,n=e._anchor._y*i*2;r.minX-=i-s,r.minY-=i-n,r.maxX-=i-s,r.maxY-=i-n}class Bt{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e.styleKey;return t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e);if(e._didTextUpdate){const i=e._autoResolution?this._renderer.resolution:e.resolution;(r.currentKey!==e.styleKey||e.resolution!==i)&&this._updateGpuText(e).catch(s=>{console.error(s)}),e._didTextUpdate=!1,be(r,e)}this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=t.texturePromise;t.texturePromise=null,t.generatingTexture=!0,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;let i=this._renderer.htmlText.getTexturePromise(e);r&&(i=i.finally(()=>{this._renderer.htmlText.decreaseReferenceCount(t.currentKey),this._renderer.htmlText.returnTexturePromise(r)})),t.texturePromise=i,t.currentKey=e.styleKey,t.texture=await i;const s=e.renderGroup||e.parentRenderGroup;s&&(s.structureDidChange=!0),t.generatingTexture=!1,be(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new Hr(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.texture=R.EMPTY,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}Bt.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"htmlText"};function Vr(){const{userAgent:o}=Y.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(o)}const Yr=new Ze;function kt(o,e,t,r){const i=Yr;i.minX=0,i.minY=0,i.maxX=o.width/r|0,i.maxY=o.height/r|0;const s=A.getOptimalTexture(i.width,i.height,r,!1);return s.source.uploadMethodId="image",s.source.resource=o,s.source.alphaMode="premultiply-alpha-on-upload",s.frame.width=e/r,s.frame.height=t/r,s.source.emit("update",s.source),s.updateUvs(),s}function Xr(o,e){const t=e.fontFamily,r=[],i={},s=/font-family:([^;"\s]+)/g,n=o.match(s);function a(l){i[l]||(r.push(l),i[l]=!0)}if(Array.isArray(t))for(let l=0;l<t.length;l++)a(t[l]);else a(t);n&&n.forEach(l=>{const u=l.split(":")[1].trim();a(u)});for(const l in e.tagStyles){const u=e.tagStyles[l].fontFamily;a(u)}return r}async function $r(o){const t=await(await Y.get().fetch(o)).blob(),r=new FileReader;return await new Promise((s,n)=>{r.onloadend=()=>s(r.result),r.onerror=n,r.readAsDataURL(t)})}async function jr(o,e){const t=await $r(e);return`@font-face {
        font-family: "${o.fontFamily}";
        font-weight: ${o.fontWeight};
        font-style: ${o.fontStyle};
        src: url('${t}');
    }`}const _e=new Map;async function Kr(o){const e=o.filter(t=>G.has(`${t}-and-url`)).map(t=>{if(!_e.has(t)){const{entries:r}=G.get(`${t}-and-url`),i=[];r.forEach(s=>{const n=s.url,l=s.faces.map(u=>({weight:u.weight,style:u.style}));i.push(...l.map(u=>jr({fontWeight:u.weight,fontStyle:u.style,fontFamily:t},n)))}),_e.set(t,Promise.all(i).then(s=>s.join(`
`)))}return _e.get(t)});return(await Promise.all(e)).join(`
`)}function Nr(o,e,t,r,i){const{domElement:s,styleElement:n,svgRoot:a}=i;s.innerHTML=`<style>${e.cssStyle}</style><div style='padding:0;'>${o}</div>`,s.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),n.textContent=r;const{width:l,height:u}=i.image;return a.setAttribute("width",l.toString()),a.setAttribute("height",u.toString()),new XMLSerializer().serializeToString(a)}function qr(o,e){const t=N.getOptimalCanvasAndContext(o.width,o.height,e),{context:r}=t;return r.clearRect(0,0,o.width,o.height),r.drawImage(o,0,0),t}function Qr(o,e,t){return new Promise(async r=>{t&&await new Promise(i=>setTimeout(i,100)),o.onload=()=>{r()},o.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,o.crossOrigin="anonymous"})}class Rt{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===we.WEBGPU}getTexture(e){return this.getTexturePromise(e)}getManagedTexture(e){const t=e.styleKey;if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].promise;const r=this._buildTexturePromise(e).then(i=>(this._activeTextures[t].texture=i,i));return this._activeTextures[t]={texture:null,promise:r,usageCount:1},r}getReferenceCount(e){var t,r;return(r=(t=this._activeTextures[e])==null?void 0:t.usageCount)!=null?r:null}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t.texture):t.promise.then(r=>{t.texture=r,this._cleanUp(t.texture)}).catch(()=>{j("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}getTexturePromise(e){return this._buildTexturePromise(e)}async _buildTexturePromise(e){const{text:t,style:r,resolution:i,textureStyle:s}=e,n=ce.get(gt),a=Xr(t,r),l=await Kr(a),u=gr(t,r,l,n),c=Math.ceil(Math.ceil(Math.max(1,u.width)+r.padding*2)*i),d=Math.ceil(Math.ceil(Math.max(1,u.height)+r.padding*2)*i),h=n.image,f=2;h.width=(c|0)+f,h.height=(d|0)+f;const x=Nr(t,r,i,l,n);await Qr(h,x,Vr()&&a.length>0);const g=h;let _;this._createCanvas&&(_=qr(h,i));const p=kt(_?_.canvas:g,h.width-f,h.height-f,i);return s&&(p.source.style=s),this._createCanvas&&(this._renderer.texture.initSource(p.source),N.returnCanvasAndContext(_)),ce.return(n),p}returnTexturePromise(e){e.then(t=>{this._cleanUp(t)}).catch(()=>{j("HTMLTextSystem: Failed to clean texture")})}_cleanUp(e){A.returnTexture(e,!0),e.source.resource=null,e.source.uploadMethodId="unknown"}destroy(){this._renderer=null;for(const e in this._activeTextures)this._activeTextures[e]&&this.returnTexturePromise(this._activeTextures[e].promise);this._activeTextures=null}}Rt.extension={type:[T.WebGLSystem,T.WebGPUSystem,T.CanvasSystem],name:"htmlText"};class Jr extends st{constructor(e){super(),this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){const{canvasText:e}=this._renderer;e.getReferenceCount(this.currentKey)>0?e.decreaseReferenceCount(this.currentKey):this.texture&&e.returnTexture(this.texture),this._renderer.runners.resolutionChange.remove(this),this._renderer=null}}class Mt{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e.styleKey;return t.currentKey!==r?!0:e._didTextUpdate}addRenderable(e,t){const r=this._getGpuText(e);if(e._didTextUpdate){const i=e._autoResolution?this._renderer.resolution:e.resolution;(r.currentKey!==e.styleKey||e.resolution!==i)&&this._updateGpuText(e),e._didTextUpdate=!1,be(r,e)}this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}_updateGpuText(e){const t=this._getGpuText(e);t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,t.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e.styleKey}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new Jr(this._renderer);return t.currentKey="--",t.renderable=e,t.transform=e.groupTransform,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}Mt.extension={type:[T.WebGLPipes,T.WebGPUPipes,T.CanvasPipes],name:"text"};class Ut{constructor(e){this._activeTextures={},this._renderer=e}getTexture(e,t,r,i){var h;typeof e=="string"&&(k("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof q||(e.style=new q(e.style)),e.textureStyle instanceof ie||(e.textureStyle=new ie(e.textureStyle)),typeof e.text!="string"&&(e.text=e.text.toString());const{text:s,style:n,textureStyle:a}=e,l=(h=e.resolution)!=null?h:this._renderer.resolution,{frame:u,canvasAndContext:c}=xe.getCanvasAndContext({text:s,style:n,resolution:l}),d=kt(c.canvas,u.width,u.height,l);if(a&&(d.source.style=a),n.trim&&(u.pad(n.padding),d.frame.copyFrom(u),d.frame.scale(1/l),d.updateUvs()),n.filters){const f=this._applyFilters(d,n.filters);return this.returnTexture(d),xe.returnCanvasAndContext(c),f}return this._renderer.texture.initSource(d._source),xe.returnCanvasAndContext(c),d}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",A.returnTexture(e,!0)}renderTextToCanvas(){k("8.10.0","CanvasTextSystem.renderTextToCanvas: no longer supported, use CanvasTextSystem.getTexture instead")}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e.styleKey;if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const r=this.getTexture({text:e.text,style:e.style,resolution:e._resolution,textureStyle:e.textureStyle});return this._activeTextures[t]={texture:r,usageCount:1},r}decreaseReferenceCount(e){const t=this._activeTextures[e];t.usageCount--,t.usageCount===0&&(this.returnTexture(t.texture),this._activeTextures[e]=null)}getReferenceCount(e){var t,r;return(r=(t=this._activeTextures[e])==null?void 0:t.usageCount)!=null?r:0}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}_applyFilters(e,t){const r=this._renderer.renderTarget.renderTarget,i=this._renderer.filter.generateFilteredTexture({texture:e,filters:t});return this._renderer.renderTarget.bind(r,!1),i}destroy(){this._renderer=null;for(const e in this._activeTextures)this._activeTextures[e]&&this.returnTexture(this._activeTextures[e].texture);this._activeTextures=null}}Ut.extension={type:[T.WebGLSystem,T.WebGPUSystem,T.CanvasSystem],name:"canvasText"};F.add(nt);F.add(at);F.add(mt);F.add($t);F.add(yt);F.add(vt);F.add(Tt);F.add(Ut);F.add(Mt);F.add(Ft);F.add(Rt);F.add(Bt);F.add(Pt);F.add(Ct);F.add(dt);F.add(ht);
